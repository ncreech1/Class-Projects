#!/bin/sh 

dir=/home/jplank/cs140/Labs/Lab2
ge="$dir/Gradescript-Examples"

if [ $# -ne 1 ]; then
  echo 'usage: gradescript problem_number (1-100)' >&2
  exit 1
fi

if [ "$1" -gt 0 -a "$1" -le 100 ]; then
  enum=`echo $1 | awk '{ printf "%03d\n", $1 }'`
else
  echo 'usage: gradescript problem_number (1-100)' >&2
  exit 1
fi
  
if [ $1 -le 20 ]; then
  program=pgminfo
elif [ $1 -le 35 ]; then
  program=bigwhite
elif [ $1 -le 50 ]; then
  program=neg
elif [ $1 -le 75 ]; then
  program=hflip
else
  program=vflip
fi
  
if [ ! -f $program ]; then
  echo "Problem $enum is incorrect."
  echo ""
  echo "Your program $program does not exist."
  exit 0
fi

rm -f tmp-$enum-grader-stdout.txt tmp-$enum-grader-stderr.txt tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt tmp-$enum-correct-stdout.txt tmp-$enum-correct-stderr.txt

if [ $program = bigwhite ]; then
  $dir/$program `cat $ge/$enum.txt` > tmp-$enum-correct-stdout.txt 2> tmp-$enum-correct-stderr.txt
  ./$program `cat $ge/$enum.txt` > tmp-$enum-test-stdout.txt 2> tmp-$enum-test-stderr.txt
  call="./$program "`cat $ge/$enum.txt` 
else 
  $dir/$program < $ge/$enum.pgm > tmp-$enum-correct-stdout.txt 2> tmp-$enum-correct-stderr.txt
  ./$program < $ge/$enum.pgm > tmp-$enum-test-stdout.txt 2> tmp-$enum-test-stderr.txt
  call="./$program < $ge/$enum.pgm"
fi

if [ $program = pgminfo ]; then 
  out=`diff tmp-$enum-correct-stdout.txt tmp-$enum-test-stdout.txt | wc | awk '{ print $1 }'`
  err=`diff tmp-$enum-correct-stderr.txt tmp-$enum-test-stderr.txt | wc | awk '{ print $1 }'`
  
  if [ $out != 0 -o $err != 0 ]; then
    echo "Problem $enum is incorrect."
    echo ""
    if [ $out != 0 ]; then
      echo "Your standard output does not match the correct one."
    fi
    if [ $err != 0 ]; then
      echo "Your standard error does not match the correct one."
    fi
    echo ""
    echo "TEST:"
    echo ""
    echo "$call"
    echo ""
    echo "FILES:"
    echo ""
    echo "Your standard output is in tmp-$enum-test-stdout.txt."
    echo "Your standard error  is in tmp-$enum-test-stderr.txt."
    echo ""
    echo "The correct standard output is in tmp-$enum-correct-stdout.txt."
    echo "The correct standard error  is in tmp-$enum-correct-stderr.txt."
    echo ""
    echo "Look at correct files and your files, perhaps run 'diff -y' on them, and figure out your mistake."
    echo "Please remember to delete this files when you are finished."
  else 
    echo "Problem $enum is correct."
    echo ""
    echo "Test: $call" 
    rm -f tmp-$enum-grader-stdout.txt tmp-$enum-grader-stderr.txt tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt tmp-$enum-correct-stdout.txt tmp-$enum-correct-stderr.txt
  fi
else
  err=`diff tmp-$enum-correct-stderr.txt tmp-$enum-test-stderr.txt | wc | awk '{ print $1 }'`
  if [ $err != 0 ]; then
    echo "Problem $enum is incorrect."
    echo ""
    echo "Your standard error does not match the correct one."
    echo ""
    echo "TEST:"
    echo ""
    echo "$call"
    echo ""
    echo "FILES:"
    echo ""
    echo "Your standard output is in tmp-$enum-test-stdout.txt."
    echo "Your standard error  is in tmp-$enum-test-stderr.txt."
    echo ""
    echo "The correct standard output is in tmp-$enum-correct-stdout.txt."
    echo "The correct standard error  is in tmp-$enum-correct-stderr.txt."
    echo ""
    echo "Look at correct files and your files, perhaps run 'diff -y' on them, and figure out your mistake."
    echo "Please remember to delete this files when you are finished."
    exit 0
  fi

  err=`cat tmp-$enum-test-stderr.txt | wc | awk '{ print $1 }'`
  if [ $err -gt 0 ]; then
    echo "Problem $enum is correct."
    echo ""
    echo "Test: $call" 
    rm -f tmp-$enum-grader-stdout.txt tmp-$enum-grader-stderr.txt tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt tmp-$enum-correct-stdout.txt tmp-$enum-correct-stderr.txt
    exit 0
  fi

  $dir/pgm_compare tmp-$enum-test-stdout.txt tmp-$enum-correct-stdout.txt > tmp-$enum-grader-stdout.txt \
       2> tmp-$enum-grader-stderr.txt 
  out=`cat tmp-$enum-grader-stdout.txt | wc | awk '{ print $1 }'`
  err=`cat tmp-$enum-grader-stderr.txt | wc | awk '{ print $1 }'`
  if [ $out != 0 -o $err != 0 ]; then
    echo "Problem $enum is incorrect."
    echo ""
    if [ $out != 0 ]; then
      echo "Your PGM file differs from the correct one."
    fi
    if [ $err != 0 ]; then
      echo "Your PGM file is not legal."
    fi
    echo ""
    echo "TEST:"
    echo ""
    echo "$call"
    echo "$dir/pgm_compare tmp-$enum-test-stdout.txt tmp-$enum-correct-stdout.txt > tmp-$enum-grader-stdout.txt 2> tmp-$enum-grader-stderr.txt"
    echo ""
    echo "FILES:"
    echo ""
    echo "Your standard output is in tmp-$enum-test-stdout.txt."
    echo "Your standard error  is in tmp-$enum-test-stderr.txt."
    echo ""
    echo "The correct standard output is in tmp-$enum-correct-stdout.txt."
    echo "The correct standard error  is in tmp-$enum-correct-stderr.txt."
    echo ""
    echo "The output of pgm_compare is in tmp-$enum-grader-stdout.txt."
    echo "Standard error of pgm_compare is in tmp-$enum-grader-stdeff.txt."
    echo ""
    echo "Look at correct files and your files, perhaps run 'diff -y' on them, and figure out your mistake."
    echo "Please remember to delete this files when you are finished."
   
  else 
    echo "Problem $enum is correct."
    echo ""
    echo "Test: $call" 
    rm -f tmp-$enum-grader-stdout.txt tmp-$enum-grader-stderr.txt tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt tmp-$enum-correct-stdout.txt tmp-$enum-correct-stderr.txt
  fi
fi

